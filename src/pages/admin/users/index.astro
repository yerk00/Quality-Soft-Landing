---
import { actions } from 'astro:actions'
import { Icon } from 'astro-icon/components'
import AdminLayout from '@/modules/admin/layouts/AdminLayout.astro'
import Title from '@/modules/shared/components/ui/Title.astro'
import CreateButton from '@/modules/shared/components/buttons/CreateButton.astro'
import ViewButton from '@/modules/shared/components/buttons/ViewButton.astro'
import EditButton from '@/modules/shared/components/buttons/EditButton.astro'

import 'sweetalert2/dist/sweetalert2.min.css'

const { data: usersData, error: usersError } = await actions.getAllUsers()

if ( usersError ) return Astro.redirect( '/admin' )

const { users } = usersData

const roleColors : Record<string, string> = {
  'ADMIN': 'bg-blue-100 text-blue-800',
}
---

<AdminLayout>
  <div class="w-full px-4 py-8 flex flex-col gap-20 items-center md:px-12">
    <Title>ðŸ‘¥ AdministraciÃ³n de Usuarios</Title>

    <div class="mb-4 flex justify-between items-center">
      <CreateButton
        href="/admin/users/create"
        icon="mdi:account-plus"
      >
        Agregar Usuario
      </CreateButton>
    </div>
    <div class="bg-white shadow-md rounded-lg">
      <div class="overflow-x-auto">
        <table class="w-full divide-y divide-gray-200 max-w-4xl">
          <thead class="bg-gray-50">
            <tr>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Usuario</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Email</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Rol</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Estado</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Acciones</th>
            </tr>
          </thead>
          <tbody class="bg-white divide-y divide-gray-200">
            { users.map( ( user ) => (
            <tr>
              <td class="px-6 py-4 whitespace-nowrap">
                <div class="flex items-center">
                  <div class="flex-shrink-0 h-10 w-10">
                    <img class="h-10 w-10 rounded-full" src={`https://ui-avatars.com/api/?name=${user.name}+${user.lastName}&background=random`} alt="" />
                  </div>
                  <div class="ml-4">
                    <div class="text-sm font-medium text-gray-900">{ user.name } {user.lastName}</div>
                  </div>
                </div>
              </td>
              <td class="px-6 py-4 whitespace-nowrap">
                <div class="text-sm text-gray-900">{ user.email }</div>
              </td>
              <td class="px-6 py-4 whitespace-nowrap">
                <span class={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${ roleColors[ user.role ] }`}>
                  { ( user.role === 'ADMIN' ) ? 'Administrador' : 'Usuario' }
                </span>
              </td>
              <td class="px-6 py-4 whitespace-nowrap">
                <span
                  class={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${user.status ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}`}
                  id={`span-status-${user.id}`}
                >
                  {user.status ? 'Activo' : 'Inactivo'}
                </span>
              </td>
              <td class="px-6 py-8 whitespace-nowrap text-sm font-medium flex items-center">
                <ViewButton href={`/admin/users/${ user.id }`} />
                <EditButton href={`/admin/users/edit/${ user.id }`} />
                <button
                  class="toggle-button"
                  data-id={ user.id }
                  data-current-status={ user.status }
                >
                  <Icon
                    name="mdi:delete"
                    size={ 20 }
                    class={ `text-red-600 hover:text-red-900 ${ ( !user.status ) ? 'hidden' : '' } delete-icon` }
                  />
                  <Icon
                    name="mdi:restore"
                    size={ 20 }
                    class={ `text-green-600 hover:text-green-900 ${ user.status ? 'hidden' : '' } restore-icon` }
                  />
                </button>
              </td>
            </tr>
            ) ) }
          </tbody>
        </table>
      </div>
    </div>
  </div>
</AdminLayout>
<script>
import { actions } from 'astro:actions'
import Swal from 'sweetalert2'

const deleteButtons = document.querySelectorAll( '.toggle-button' )

deleteButtons.forEach( ( button ) => {
  button.addEventListener( 'click', async ( _e ) => {
    const id = button.getAttribute( 'data-id' )

    const currentStatus = button.getAttribute( 'data-current-status' ) === 'true'

    if ( !id ) return

    const { error } = await actions.toggleStatusUser( { id, currentStatus } )

    if ( error ) {
      Swal.fire( {
        icon: 'error',
        title: 'Error al eliminar el usuario',
        text: 'No se pudo eliminar el usuario. Por favor, intÃ©ntelo de nuevo.',
      } )
      return
    }

    Swal.fire({
      icon: 'success',
      title: 'Perfecto!',
      text: `Se realizo la accion`,
    })

    button.setAttribute('data-current-status', (!currentStatus).toString())

    const statusSpan = document.querySelector( `#span-status-${ id }` ) as HTMLElement

    if ( !currentStatus ) {
      statusSpan.classList.add( 'bg-green-100' )
      statusSpan.classList.add( 'text-green-800' )
      statusSpan.classList.remove( 'bg-red-100' )
      statusSpan.classList.remove( 'text-red-800' )
      statusSpan.textContent = 'Activo'
    } else {
      statusSpan.classList.add( 'bg-red-100' )
      statusSpan.classList.add( 'text-red-800' )
      statusSpan.classList.remove( 'bg-green-100' )
      statusSpan.classList.remove( 'text-green-800' )
      statusSpan.textContent = 'Inactivo'
    }

    const deleteIcon = button.querySelector( '.delete-icon' ) as HTMLElement
    const restoreIcon = button.querySelector( '.restore-icon' ) as HTMLElement

    if ( !currentStatus ) {
      deleteIcon.classList.remove('hidden')
      restoreIcon.classList.add('hidden')
    } else {
      deleteIcon.classList.add('hidden')
      restoreIcon.classList.remove('hidden')
    }
  } )
} )
</script>
