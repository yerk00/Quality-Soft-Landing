---
import { Icon } from 'astro-icon/components'
import Label from '@/modules/shared/components/forms/Label.astro'

const inputClass = 'w-full pl-10 pr-3 py-3 border-2 border-gray-300 rounded-md focus:outline-none focus:border-indigo-600 sm:text-sm'

interface Props {
  data: {
    id: string
    name: string
    lastName: string
    email: string
    avatar: string | null
  }
}

const { data } = Astro.props

const inputs = [
  {
    label: 'Nombre',
    name: 'name',
    value: data.name,
    type: 'text',
    icon: 'mdi:account',
    placeholder: 'Ingrese su nombre',
    isRequired: true,
  },
  {
    label: 'Apellido',
    id: 'lastName',
    name: 'lastName',
    value: data.lastName,
    type: 'text',
    icon: 'mdi:account-outline',
    placeholder: 'Ingrese su apellido',
    isRequired: true,
  },
  {
    label: 'Correo Electr√≥nico',
    name: 'email',
    value: data.email,
    type: 'text',
    icon: 'mdi:email',
    placeholder: 'example@gmail.com',
    isRequired: true,
  },
  {
    label: 'Avatar(Link)',
    name: 'avatar',
    value: data.avatar,
    type: 'text',
    icon: 'mdi:image',
    placeholder: 'https://example.com/avatar.jpg',
    isRequired: false,
  }
]

---

<form
  id="update-user-form"
  class="px-4 py-5 sm:p-6"
>
  <input type="hidden" name="id" value={ data.id } />
  <div class="grid grid-cols-1 gap-6 sm:grid-cols-2">
    {
    inputs.map( ( input ) => (
    <div>
      <Label
        for={ input.name }
        isRequired={ input.isRequired }
      > { input.label } </Label>
      <div class="mt-1 relative rounded-md shadow-sm">
        <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
          <Icon name={ input.icon } size={ 24 } class="text-gray-400" />
        </div>
        <input
          id={ input.name }
          type={ input.type as any }
          name={ input.name }
          class={ inputClass }
          value={ input.value }
          placeholder={ input.placeholder }
        />
      </div>
      <p class="mt-2 text-sm text-red-600 hidden error" id={ `${ input.name }-error` }></p>
    </div>
    ) )
    }
  </div>
  <div class="mt-8">
    <p class="mt-2 text-sm text-red-600 hidden" id="default-error"></p>
  </div>

  <div class="mt-8">
    <button
      class="w-full flex justify-center py-3 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-slate-800 hover:bg-slate-950' focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-slate-800 transition-colors duration-200"
    >
      <Icon name="mdi:content-save" size={ 24 } class="mr-2" />
      Guardar Cambios
    </button>
  </div>
</form>

<script>
import { actions } from 'astro:actions'
import { navigate } from 'astro:transitions/client'
import { getErrorList } from '@/utils'

const form = document.getElementById( 'update-user-form' ) as HTMLFormElement
console.log({ form })

form.addEventListener( 'submit', async ( event ) => {
  event.preventDefault()
  console.log( 'submit' )

  const formData = new FormData( form )

  const { error } = await actions.updateUser( formData )

  if ( error ) {
    console.log({ error, errorType: typeof error })
    const errorMessages = getErrorList( error )
    for ( const errorMessage of errorMessages ) {
      const { field, message } = errorMessage
      const errorElement = document.getElementById( `${ field }-error` )
      if ( errorElement ) {
        errorElement.textContent = message
        errorElement.classList.remove( 'hidden' )
      }
    }

    return
  }

  navigate( '/admin/users' )
} )
</script>
